set nu " 显示行号  
set go= " 不要图形按钮  
set guifont=Courier_New:h10:cANSI " 设置字体  
autocmd InsertLeave * se nocul " 用浅色高亮当前行  
autocmd InsertEnter * se cul " 用浅色高亮当前行  
set ruler " 显示标尺  
set showcmd " 输入的命令显示出来，看的清楚些  
set novisualbell " 不要闪烁  
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")} "状态行显示的内容  
set laststatus=2 " 启动显示状态行(1),总是显示状态行(2)   
set nocompatible " 不要使用vi的键盘模式，而是vim自己的
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936
set fileencoding=utf-8
set autoread " 设置当文件被改动时自动载入
set autowrite " 自动保存
set completeopt=preview,menu " 代码补全 
filetype plugin on " 允许插件  
set clipboard+=unnamed " 共享剪贴板  
set nobackup " 从不备份 
set cursorline " 突出显示当前行
set magic " 设置魔术
set syntax=on " 语法高亮
set noeb " 去掉输入错误的提示声音
set confirm " 在处理未保存或只读文件的时候，弹出确认
set autoindent " 自动缩进
set cindent
set tabstop=4 " Tab键的宽度
set softtabstop=4 " 统一缩进为4
set shiftwidth=4
set noexpandtab " 不要用空格代替制表符
" 历史记录数
set history=1000
" 禁止生成临时文件
set nobackup
set noswapfile
"搜索忽略大小写
set ignorecase
"搜索逐字符高亮
set hlsearch
set incsearch
"行内替换
set gdefault
"编码设置
set enc=utf-8
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
"语言设置
set langmenu=zh_CN.UTF-8
set helplang=cn
" 命令行（在状态行下）的高度，默认为1，这里是2
set cmdheight=2
" 保存全局变量
set viminfo+=!
" 带有如下符号的单词不要被换行分割
set iskeyword+=_,$,@,%,#,-
" 字符间插入的像素行数目
set linespace=0
" 增强模式中的命令行自动完成操作
set wildmenu
" 使回格键（backspace）正常处理indent, eol, start等
set backspace=2
" 允许backspace和光标键跨越行边界
set whichwrap+=<,>,h,l
" 通过使用: commands命令，告诉我们文件的哪一行被改变过
set report=0
" 在被分割的窗口间显示空白，便于阅读
set fillchars=vert:\ ,stl:\ ,stlnc:\
" 高亮显示匹配的括号
set showmatch
" 匹配括号高亮的时间（单位是十分之一秒）
set matchtime=1
" 光标移动到buffer的顶部和底部时保持3行距离
set scrolloff=3


"F3一键添加作者信息, F4一键更新修改时间"""""""""""""""""""""""""""""""""""""""""""""""""
map <F3> ms:call AddCopyright()<cr>'s
map <F4> ms:call UpdateTitle()<cr>'s

function AddCopyright()
        let n=1
        while n < 5
                let line = getline(n)
                if line =~'^\s*\*\s*\S*Last\s*modified\s*:\s*\S*.*$'
                        call UpdateTitle()
                        return
                endif
                let n = n + 1
        endwhile
        call AddTitle()
endfunction

function AddTitle()
        call append(0,"<<!")
        call append(1," **********************************************************")
        call append(2," * Author        : yuh")
        call append(3," * Email         : 786098014@qq.com")
        call append(4," * Last modified : ".strftime("%Y-%m-%d %H:%M"))
        call append(5," * Filename      : ".expand("%:t"))
        call append(6," * Description   : ")
        call append(7," * *******************************************************")
        call append(8,"!")
        echohl WarningMsg | echo "Successful in adding the copyright." | echohl None
endfunction

function UpdateTitle()
        normal m'
        execute '/* Last modified\s*:/s@:.*$@\=strftime(": %Y-%m-%d %H:%M")@'
        normal "
        normal mk
        execute '/* Filename\s*:/s@:.*$@\=": ".expand("%:t")@'
        execute "noh"
        normal 'k
        echohl WarningMsg | echo "Successful in updating the copyright." | echohl None
endfunction
